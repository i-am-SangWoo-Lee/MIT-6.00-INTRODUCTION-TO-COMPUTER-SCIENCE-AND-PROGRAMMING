"""
Name : SangWoo Lee
Data : 2022.08.07
Email : i.am.sangwoo.lee@gmail.com
"""

1.1)    False⭕️. sorting most likely run in O(nlogn)
1.2)    False⭕️. when differenciation is zero, it will bring incorrect answer
1.3)    False⭕️. tuple and set is immutable.
1.4)    False⭕️. IDK. but, floating point somthing makes difference.
1.5)    False⭕️. recursive solution is the last choice for programming most of the time.
                it could bring stack overflow.
1.6)    True⭕️. Using Same coding again will reduces lines of code.
1.7)    True⭕️. Thanks to HASH.

2.1)    Yes⭕️
2.2)    Yes❌
ANS :   No, they print different things for negative inputs.
        This is because a and b are updated to refer to a different 
        number in compare1, whereas they are not updated in compare2.

3.1)    6️️⭕️
3.2)    sum every digitsa⭕️

4)      
def first_N(n:int):
    assert n>0
    cnt = 0
    perfect_square = 1
    ans =[]
    while cnt < n:
        ans.append(perfect_square * perfect_square)
        perfect_square += 2
        cnt += 1
    for i in ans:
        print(i, end=' ')⭕️

5)  
def guessAndCheck(num):
    for guess in possibleRange:
        if num == guess:
            return True⭕️

6)
def findSide():
    """
    asks the user to enter the area of a rectangle and the length of one side of the
    rectangle. Returns a floating point number that is the length of the adjacent side.
    """
    area = float(input("area : "))
    oneside = float(input("length of one side : "))
    return area / oneside⭕️

7)
def f(L):
    """
    Returns a copy of the list L without modifying L.
    """
    result = []
    for e in L: result.append(e)
    return result

GOOD⭕️

8)
def nuggets(num:int):
    """
    McDonalds sell chicken nuggets in packages containing 6, 9 or 20 pieces.\n
    return boolean value of possible to buy num nuggets
    """ 
    isPossible = False
    for z in range(num//20):
        for y in range((num - 20*z)//9):
            if (num - 20*z - 9*y)%6 == 0:
                isPossible = True
                return isPossible
    return False⭕️
    
9)
def f(n):
    """
    reverse the number and return in string form
    e.g) 1234 to 4321, 4325 to 5234
    """
    s = str(n)
    if len(s) <= 1: return s
    return s[-1] + f(int(s[:-1]))⭕️